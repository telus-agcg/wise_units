use crate::{
    atom_collection::AtomCollection, base_units, derived_units, tokens::AtomSymbol, SymbolKey,
};
pub const UNITS: AtomCollection = AtomCollection {
    inner: [
        (
            SymbolKey("[Amb'a'1'U]"),
            AtomSymbol::AllergenUnitForAmbrosiaArtemisiifolia(
                derived_units::AllergenUnitForAmbrosiaArtemisiifolia,
            ),
        ),
        (
            SymbolKey("[anti'Xa'U]"),
            AtomSymbol::AntiFactorXaUnit(derived_units::AntiFactorXaUnit),
        ),
        (
            SymbolKey("[in_i'H2O]"),
            AtomSymbol::InchOfWaterColumn(derived_units::InchOfWaterColumn),
        ),
        (
            SymbolKey("[stone_av]"),
            AtomSymbol::Stone(derived_units::Stone),
        ),
        (
            SymbolKey("[CCID_50]"),
            AtomSymbol::FiftyPercentCellCultureInfectiousDose(
                derived_units::FiftyPercentCellCultureInfectiousDose,
            ),
        ),
        (
            SymbolKey("[TCID_50]"),
            AtomSymbol::FiftyPercentTissueCultureInfectiousDose(
                derived_units::FiftyPercentTissueCultureInfectiousDose,
            ),
        ),
        (
            SymbolKey("[in_i'Hg]"),
            AtomSymbol::InchOfMercuryColumn(derived_units::InchOfMercuryColumn),
        ),
        (
            SymbolKey("[lcwt_av]"),
            AtomSymbol::LongHunderdweight(derived_units::LongHunderdweight),
        ),
        (
            SymbolKey("[lton_av]"),
            AtomSymbol::LongTon(derived_units::LongTon),
        ),
        (
            SymbolKey("[scwt_av]"),
            AtomSymbol::ShortHundredweight(derived_units::ShortHundredweight),
        ),
        (
            SymbolKey("[ston_av]"),
            AtomSymbol::ShortTon(derived_units::ShortTon),
        ),
        (
            SymbolKey("[Btu_39]"),
            AtomSymbol::BritishThermalUnitAt39DegF(derived_units::BritishThermalUnitAt39DegF),
        ),
        (
            SymbolKey("[Btu_59]"),
            AtomSymbol::BritishThermalUnitAt59DegF(derived_units::BritishThermalUnitAt59DegF),
        ),
        (
            SymbolKey("[Btu_60]"),
            AtomSymbol::BritishThermalUnitAt60DegF(derived_units::BritishThermalUnitAt60DegF),
        ),
        (
            SymbolKey("[Btu_IT]"),
            AtomSymbol::InternationalTableBritishThermalUnit(
                derived_units::InternationalTableBritishThermalUnit,
            ),
        ),
        (
            SymbolKey("[Btu_th]"),
            AtomSymbol::ThermochemicalBritishThermalUnit(
                derived_units::ThermochemicalBritishThermalUnit,
            ),
        ),
        (
            SymbolKey("[D'ag'U]"),
            AtomSymbol::DAntigenUnit(derived_units::DAntigenUnit),
        ),
        (
            SymbolKey("[EID_50]"),
            AtomSymbol::FiftyPercentEmbryoInfectiousDose(
                derived_units::FiftyPercentEmbryoInfectiousDose,
            ),
        ),
        (
            SymbolKey("[acr_br]"),
            AtomSymbol::AcreAcrBr(derived_units::AcreAcrBr),
        ),
        (
            SymbolKey("[acr_us]"),
            AtomSymbol::AcreAcrUs(derived_units::AcreAcrUs),
        ),
        (
            SymbolKey("[bbl_us]"),
            AtomSymbol::Barrel(derived_units::Barrel),
        ),
        (
            SymbolKey("[bdsk'U]"),
            AtomSymbol::BodanskyUnit(derived_units::BodanskyUnit),
        ),
        (
            SymbolKey("[beth'U]"),
            AtomSymbol::BethesdaUnit(derived_units::BethesdaUnit),
        ),
        (
            SymbolKey("[car_Au]"),
            AtomSymbol::CaratOfGoldAlloys(derived_units::CaratOfGoldAlloys),
        ),
        (
            SymbolKey("[cicero]"),
            AtomSymbol::Cicero(derived_units::Cicero),
        ),
        (
            SymbolKey("[crd_us]"),
            AtomSymbol::CordCrdUs(derived_units::CordCrdUs),
        ),
        (SymbolKey("[cup_us]"), AtomSymbol::Cup(derived_units::Cup)),
        (
            SymbolKey("[dpt_us]"),
            AtomSymbol::DryPint(derived_units::DryPint),
        ),
        (
            SymbolKey("[dqt_us]"),
            AtomSymbol::DryQuart(derived_units::DryQuart),
        ),
        (
            SymbolKey("[fdr_br]"),
            AtomSymbol::FluidDramFdrBr(derived_units::FluidDramFdrBr),
        ),
        (
            SymbolKey("[fdr_us]"),
            AtomSymbol::FluidDramFdrUs(derived_units::FluidDramFdrUs),
        ),
        (
            SymbolKey("[foz_br]"),
            AtomSymbol::FluidOunceFozBr(derived_units::FluidOunceFozBr),
        ),
        (
            SymbolKey("[foz_us]"),
            AtomSymbol::FluidOunceFozUs(derived_units::FluidOunceFozUs),
        ),
        (
            SymbolKey("[fth_br]"),
            AtomSymbol::FathomFthBr(derived_units::FathomFthBr),
        ),
        (
            SymbolKey("[fth_us]"),
            AtomSymbol::FathomFthUs(derived_units::FathomFthUs),
        ),
        (
            SymbolKey("[fur_us]"),
            AtomSymbol::Furlong(derived_units::Furlong),
        ),
        (
            SymbolKey("[gal_br]"),
            AtomSymbol::Gallon(derived_units::Gallon),
        ),
        (
            SymbolKey("[gal_us]"),
            AtomSymbol::QueenAnnesWineGallon(derived_units::QueenAnnesWineGallon),
        ),
        (
            SymbolKey("[gal_wi]"),
            AtomSymbol::HistoricalWinchesterGallon(derived_units::HistoricalWinchesterGallon),
        ),
        (
            SymbolKey("[gil_br]"),
            AtomSymbol::GillGilBr(derived_units::GillGilBr),
        ),
        (
            SymbolKey("[gil_us]"),
            AtomSymbol::GillGilUs(derived_units::GillGilUs),
        ),
        (
            SymbolKey("[hnsf'U]"),
            AtomSymbol::HounsfieldUnit(derived_units::HounsfieldUnit),
        ),
        (
            SymbolKey("[lbf_av]"),
            AtomSymbol::PoundForce(derived_units::PoundForce),
        ),
        (
            SymbolKey("[mclg'U]"),
            AtomSymbol::MacLaganUnit(derived_units::MacLaganUnit),
        ),
        (SymbolKey("[mesh_i]"), AtomSymbol::Mesh(derived_units::Mesh)),
        (
            SymbolKey("[mil_us]"),
            AtomSymbol::MilMilUs(derived_units::MilMilUs),
        ),
        (
            SymbolKey("[min_br]"),
            AtomSymbol::MinimMinBr(derived_units::MinimMinBr),
        ),
        (
            SymbolKey("[min_us]"),
            AtomSymbol::MinimMinUs(derived_units::MinimMinUs),
        ),
        (
            SymbolKey("[nmi_br]"),
            AtomSymbol::NauticalMileNmiBr(derived_units::NauticalMileNmiBr),
        ),
        (
            SymbolKey("[pca_pr]"),
            AtomSymbol::PrintersPica(derived_units::PrintersPica),
        ),
        (
            SymbolKey("[pnt_pr]"),
            AtomSymbol::PrintersPoint(derived_units::PrintersPoint),
        ),
        (
            SymbolKey("[pwt_tr]"),
            AtomSymbol::Pennyweight(derived_units::Pennyweight),
        ),
        (
            SymbolKey("[rch_us]"),
            AtomSymbol::RamdensChain(derived_units::RamdensChain),
        ),
        (
            SymbolKey("[rlk_us]"),
            AtomSymbol::LinkForRamdensChain(derived_units::LinkForRamdensChain),
        ),
        (
            SymbolKey("[smgy'U]"),
            AtomSymbol::SomogyiUnit(derived_units::SomogyiUnit),
        ),
        (
            SymbolKey("[smi_us]"),
            AtomSymbol::SquareMile(derived_units::SquareMile),
        ),
        (
            SymbolKey("[srd_us]"),
            AtomSymbol::SquareRod(derived_units::SquareRod),
        ),
        (
            SymbolKey("[tbs_us]"),
            AtomSymbol::Tablespoon(derived_units::Tablespoon),
        ),
        (
            SymbolKey("[todd'U]"),
            AtomSymbol::ToddUnit(derived_units::ToddUnit),
        ),
        (
            SymbolKey("[tsp_us]"),
            AtomSymbol::Teaspoon(derived_units::Teaspoon),
        ),
        (
            SymbolKey("[wood'U]"),
            AtomSymbol::WoodUnit(derived_units::WoodUnit),
        ),
        (
            SymbolKey("cal_[15]"),
            AtomSymbol::CalorieAt15DegC(derived_units::CalorieAt15DegC),
        ),
        (
            SymbolKey("cal_[20]"),
            AtomSymbol::CalorieAt20DegC(derived_units::CalorieAt20DegC),
        ),
        (
            SymbolKey("[APL'U]"),
            AtomSymbol::AplUnit(derived_units::AplUnit),
        ),
        (
            SymbolKey("[Btu_m]"),
            AtomSymbol::MeanBritishThermalUnit(derived_units::MeanBritishThermalUnit),
        ),
        (
            SymbolKey("[GPL'U]"),
            AtomSymbol::GplUnit(derived_units::GplUnit),
        ),
        (
            SymbolKey("[MPL'U]"),
            AtomSymbol::MplUnit(derived_units::MplUnit),
        ),
        (
            SymbolKey("[USP'U]"),
            AtomSymbol::UnitedStatesPharmacopeiaUnit(derived_units::UnitedStatesPharmacopeiaUnit),
        ),
        (
            SymbolKey("[arb'U]"),
            AtomSymbol::ArbitraryUnit(derived_units::ArbitraryUnit),
        ),
        (
            SymbolKey("[bu_br]"),
            AtomSymbol::BushelBuBr(derived_units::BushelBuBr),
        ),
        (
            SymbolKey("[bu_us]"),
            AtomSymbol::BushelBuUs(derived_units::BushelBuUs),
        ),
        (
            SymbolKey("[car_m]"),
            AtomSymbol::MetricCarat(derived_units::MetricCarat),
        ),
        (
            SymbolKey("[cft_i]"),
            AtomSymbol::CubicFoot(derived_units::CubicFoot),
        ),
        (
            SymbolKey("[ch_br]"),
            AtomSymbol::GuntersChainChBr(derived_units::GuntersChainChBr),
        ),
        (
            SymbolKey("[ch_us]"),
            AtomSymbol::GuntersChainChUs(derived_units::GuntersChainChUs),
        ),
        (
            SymbolKey("[cin_i]"),
            AtomSymbol::CubicInch(derived_units::CubicInch),
        ),
        (
            SymbolKey("[cml_i]"),
            AtomSymbol::CircularMil(derived_units::CircularMil),
        ),
        (
            SymbolKey("[cup_m]"),
            AtomSymbol::MetricCup(derived_units::MetricCup),
        ),
        (
            SymbolKey("[cyd_i]"),
            AtomSymbol::CubicYard(derived_units::CubicYard),
        ),
        (
            SymbolKey("[didot]"),
            AtomSymbol::Didot(derived_units::Didot),
        ),
        (
            SymbolKey("[dr_ap]"),
            AtomSymbol::DramDrAp(derived_units::DramDrAp),
        ),
        (
            SymbolKey("[dr_av]"),
            AtomSymbol::DramDrAv(derived_units::DramDrAv),
        ),
        (
            SymbolKey("[dye'U]"),
            AtomSymbol::DyeUnit(derived_units::DyeUnit),
        ),
        (
            SymbolKey("[eps_0]"),
            AtomSymbol::PermittivityOfVacuum(derived_units::PermittivityOfVacuum),
        ),
        (
            SymbolKey("[foz_m]"),
            AtomSymbol::MetricFluidOunce(derived_units::MetricFluidOunce),
        ),
        (
            SymbolKey("[ft_br]"),
            AtomSymbol::FootFtBr(derived_units::FootFtBr),
        ),
        (
            SymbolKey("[ft_us]"),
            AtomSymbol::FootFtUs(derived_units::FootFtUs),
        ),
        (
            SymbolKey("[fth_i]"),
            AtomSymbol::FathomFthI(derived_units::FathomFthI),
        ),
        (
            SymbolKey("[in_br]"),
            AtomSymbol::InchInBr(derived_units::InchInBr),
        ),
        (
            SymbolKey("[in_us]"),
            AtomSymbol::InchInUs(derived_units::InchInUs),
        ),
        (
            SymbolKey("[kn_br]"),
            AtomSymbol::KnotKnBr(derived_units::KnotKnBr),
        ),
        (
            SymbolKey("[knk'U]"),
            AtomSymbol::KunkelUnit(derived_units::KunkelUnit),
        ),
        (
            SymbolKey("[lb_ap]"),
            AtomSymbol::PoundLbAp(derived_units::PoundLbAp),
        ),
        (
            SymbolKey("[lb_av]"),
            AtomSymbol::PoundLbAv(derived_units::PoundLbAv),
        ),
        (
            SymbolKey("[lb_tr]"),
            AtomSymbol::PoundLbTr(derived_units::PoundLbTr),
        ),
        (
            SymbolKey("[ligne]"),
            AtomSymbol::Ligne(derived_units::Ligne),
        ),
        (
            SymbolKey("[lk_br]"),
            AtomSymbol::LinkForGuntersChainLkBr(derived_units::LinkForGuntersChainLkBr),
        ),
        (
            SymbolKey("[lk_us]"),
            AtomSymbol::LinkForGuntersChainLkUs(derived_units::LinkForGuntersChainLkUs),
        ),
        (
            SymbolKey("[mi_br]"),
            AtomSymbol::MileMiBr(derived_units::MileMiBr),
        ),
        (
            SymbolKey("[mi_us]"),
            AtomSymbol::MileMiUs(derived_units::MileMiUs),
        ),
        (
            SymbolKey("[mil_i]"),
            AtomSymbol::MilMilI(derived_units::MilMilI),
        ),
        (
            SymbolKey("[nmi_i]"),
            AtomSymbol::NauticalMileNmiI(derived_units::NauticalMileNmiI),
        ),
        (
            SymbolKey("[oz_ap]"),
            AtomSymbol::OunceOzAp(derived_units::OunceOzAp),
        ),
        (
            SymbolKey("[oz_av]"),
            AtomSymbol::OunceOzAv(derived_units::OunceOzAv),
        ),
        (
            SymbolKey("[oz_tr]"),
            AtomSymbol::OunceOzTr(derived_units::OunceOzTr),
        ),
        (SymbolKey("[pc_br]"), AtomSymbol::Pace(derived_units::Pace)),
        (
            SymbolKey("[pk_br]"),
            AtomSymbol::PeckPkBr(derived_units::PeckPkBr),
        ),
        (
            SymbolKey("[pk_us]"),
            AtomSymbol::PeckPkUs(derived_units::PeckPkUs),
        ),
        (
            SymbolKey("[pouce]"),
            AtomSymbol::Pouce(derived_units::Pouce),
        ),
        (
            SymbolKey("[pt_br]"),
            AtomSymbol::PintPtBr(derived_units::PintPtBr),
        ),
        (
            SymbolKey("[pt_us]"),
            AtomSymbol::PintPtUs(derived_units::PintPtUs),
        ),
        (
            SymbolKey("[qt_br]"),
            AtomSymbol::QuartQtBr(derived_units::QuartQtBr),
        ),
        (
            SymbolKey("[qt_us]"),
            AtomSymbol::QuartQtUs(derived_units::QuartQtUs),
        ),
        (
            SymbolKey("[rd_br]"),
            AtomSymbol::RodRdBr(derived_units::RodRdBr),
        ),
        (
            SymbolKey("[rd_us]"),
            AtomSymbol::RodRdUs(derived_units::RodRdUs),
        ),
        (
            SymbolKey("[sc_ap]"),
            AtomSymbol::Scruple(derived_units::Scruple),
        ),
        (
            SymbolKey("[sft_i]"),
            AtomSymbol::SquareFoot(derived_units::SquareFoot),
        ),
        (
            SymbolKey("[sin_i]"),
            AtomSymbol::SquareInch(derived_units::SquareInch),
        ),
        (
            SymbolKey("[smoot]"),
            AtomSymbol::Smoot(derived_units::Smoot),
        ),
        (
            SymbolKey("[syd_i]"),
            AtomSymbol::SquareYard(derived_units::SquareYard),
        ),
        (
            SymbolKey("[tbs_m]"),
            AtomSymbol::MetricTablespoon(derived_units::MetricTablespoon),
        ),
        (
            SymbolKey("[tsp_m]"),
            AtomSymbol::MetricTeaspoon(derived_units::MetricTeaspoon),
        ),
        (
            SymbolKey("[yd_br]"),
            AtomSymbol::YardYdBr(derived_units::YardYdBr),
        ),
        (
            SymbolKey("[yd_us]"),
            AtomSymbol::YardYdUs(derived_units::YardYdUs),
        ),
        (
            SymbolKey("[bf_i]"),
            AtomSymbol::BoardFoot(derived_units::BoardFoot),
        ),
        (
            SymbolKey("[cr_i]"),
            AtomSymbol::CordCrI(derived_units::CordCrI),
        ),
        (
            SymbolKey("[degR]"),
            AtomSymbol::DegreeRankine(derived_units::DegreeRankine),
        ),
        (
            SymbolKey("[diop]"),
            AtomSymbol::Diopter(derived_units::Diopter),
        ),
        (
            SymbolKey("[ft_i]"),
            AtomSymbol::FootFtI(derived_units::FootFtI),
        ),
        (SymbolKey("[hd_i]"), AtomSymbol::Hand(derived_units::Hand)),
        (
            SymbolKey("[hp_C]"),
            AtomSymbol::HomeopathicPotencyOfCentesimalHahnemannianSeries(
                derived_units::HomeopathicPotencyOfCentesimalHahnemannianSeries,
            ),
        ),
        (
            SymbolKey("[hp_M]"),
            AtomSymbol::HomeopathicPotencyOfMillesimalHahnemannianSeries(
                derived_units::HomeopathicPotencyOfMillesimalHahnemannianSeries,
            ),
        ),
        (
            SymbolKey("[hp_Q]"),
            AtomSymbol::HomeopathicPotencyOfQuintamillesimalHahnemannianSeries(
                derived_units::HomeopathicPotencyOfQuintamillesimalHahnemannianSeries,
            ),
        ),
        (
            SymbolKey("[hp_X]"),
            AtomSymbol::HomeopathicPotencyOfDecimalHahnemannianSeries(
                derived_units::HomeopathicPotencyOfDecimalHahnemannianSeries,
            ),
        ),
        (
            SymbolKey("[in_i]"),
            AtomSymbol::InchInI(derived_units::InchInI),
        ),
        (
            SymbolKey("[ka'U]"),
            AtomSymbol::KingArmstrongUnit(derived_units::KingArmstrongUnit),
        ),
        (
            SymbolKey("[kn_i]"),
            AtomSymbol::KnotKnI(derived_units::KnotKnI),
        ),
        (
            SymbolKey("[kp_C]"),
            AtomSymbol::HomeopathicPotencyOfCentesimalKorsakovianSeries(
                derived_units::HomeopathicPotencyOfCentesimalKorsakovianSeries,
            ),
        ),
        (
            SymbolKey("[kp_M]"),
            AtomSymbol::HomeopathicPotencyOfMillesimalKorsakovianSeries(
                derived_units::HomeopathicPotencyOfMillesimalKorsakovianSeries,
            ),
        ),
        (
            SymbolKey("[kp_Q]"),
            AtomSymbol::HomeopathicPotencyOfQuintamillesimalKorsakovianSeries(
                derived_units::HomeopathicPotencyOfQuintamillesimalKorsakovianSeries,
            ),
        ),
        (
            SymbolKey("[kp_X]"),
            AtomSymbol::HomeopathicPotencyOfDecimalKorsakovianSeries(
                derived_units::HomeopathicPotencyOfDecimalKorsakovianSeries,
            ),
        ),
        (
            SymbolKey("[mi_i]"),
            AtomSymbol::MileMiI(derived_units::MileMiI),
        ),
        (
            SymbolKey("[mu_0]"),
            AtomSymbol::PermeabilityOfVacuum(derived_units::PermeabilityOfVacuum),
        ),
        (
            SymbolKey("[oz_m]"),
            AtomSymbol::MetricOunce(derived_units::MetricOunce),
        ),
        (SymbolKey("[pied]"), AtomSymbol::Pied(derived_units::Pied)),
        (
            SymbolKey("[ppth]"),
            AtomSymbol::PartsPerThousand(derived_units::PartsPerThousand),
        ),
        (
            SymbolKey("[pptr]"),
            AtomSymbol::PartsPerTrillion(derived_units::PartsPerTrillion),
        ),
        (
            SymbolKey("[tb'U]"),
            AtomSymbol::TuberculinUnit(derived_units::TuberculinUnit),
        ),
        (
            SymbolKey("[yd_i]"),
            AtomSymbol::YardYdI(derived_units::YardYdI),
        ),
        (
            SymbolKey("cal_IT"),
            AtomSymbol::InternationalTableCalorie(derived_units::InternationalTableCalorie),
        ),
        (
            SymbolKey("cal_th"),
            AtomSymbol::ThermochemicalCalorie(derived_units::ThermochemicalCalorie),
        ),
        (
            SymbolKey("m[H2O]"),
            AtomSymbol::MeterOfWaterColumn(derived_units::MeterOfWaterColumn),
        ),
        (
            SymbolKey("[BAU]"),
            AtomSymbol::BioequivalentAllergenUnit(derived_units::BioequivalentAllergenUnit),
        ),
        (
            SymbolKey("[Btu]"),
            AtomSymbol::BritishThermalUnit(derived_units::BritishThermalUnit),
        ),
        (
            SymbolKey("[CFU]"),
            AtomSymbol::ColonyFormingUnits(derived_units::ColonyFormingUnits),
        ),
        (
            SymbolKey("[Cal]"),
            AtomSymbol::NutritionLabelCalories(derived_units::NutritionLabelCalories),
        ),
        (
            SymbolKey("[ELU]"),
            AtomSymbol::ElisaUnit(derived_units::ElisaUnit),
        ),
        (
            SymbolKey("[FEU]"),
            AtomSymbol::FibrinogenEquivalentUnit(derived_units::FibrinogenEquivalentUnit),
        ),
        (
            SymbolKey("[FFU]"),
            AtomSymbol::FocusFormingUnits(derived_units::FocusFormingUnits),
        ),
        (
            SymbolKey("[HPF]"),
            AtomSymbol::HighPowerField(derived_units::HighPowerField),
        ),
        (
            SymbolKey("[LPF]"),
            AtomSymbol::LowPowerField(derived_units::LowPowerField),
        ),
        (
            SymbolKey("[MET]"),
            AtomSymbol::MetabolicEquivalent(derived_units::MetabolicEquivalent),
        ),
        (
            SymbolKey("[PFU]"),
            AtomSymbol::PlaqueFormingUnits(derived_units::PlaqueFormingUnits),
        ),
        (
            SymbolKey("[PNU]"),
            AtomSymbol::ProteinNitrogenUnit(derived_units::ProteinNitrogenUnit),
        ),
        (
            SymbolKey("[PRU]"),
            AtomSymbol::PeripheralVascularResistanceUnit(
                derived_units::PeripheralVascularResistanceUnit,
            ),
        ),
        (
            SymbolKey("[den]"),
            AtomSymbol::Denier(derived_units::Denier),
        ),
        (SymbolKey("[drp]"), AtomSymbol::Drop(derived_units::Drop)),
        (SymbolKey("[lne]"), AtomSymbol::Line(derived_units::Line)),
        (
            SymbolKey("[m_e]"),
            AtomSymbol::ElectronMass(derived_units::ElectronMass),
        ),
        (
            SymbolKey("[m_p]"),
            AtomSymbol::ProtonMass(derived_units::ProtonMass),
        ),
        (SymbolKey("[pca]"), AtomSymbol::Pica(derived_units::Pica)),
        (SymbolKey("[pnt]"), AtomSymbol::Point(derived_units::Point)),
        (
            SymbolKey("[ppb]"),
            AtomSymbol::PartsPerBillion(derived_units::PartsPerBillion),
        ),
        (
            SymbolKey("[ppm]"),
            AtomSymbol::PartsPerMillion(derived_units::PartsPerMillion),
        ),
        (
            SymbolKey("[psi]"),
            AtomSymbol::PoundPerSquareInch(derived_units::PoundPerSquareInch),
        ),
        (
            SymbolKey("[sct]"),
            AtomSymbol::Section(derived_units::Section),
        ),
        (
            SymbolKey("[twp]"),
            AtomSymbol::Township(derived_units::Township),
        ),
        (
            SymbolKey("cal_m"),
            AtomSymbol::MeanCalorie(derived_units::MeanCalorie),
        ),
        (
            SymbolKey("m[Hg]"),
            AtomSymbol::MeterOfMercuryColumn(derived_units::MeterOfMercuryColumn),
        ),
        (
            SymbolKey("[AU]"),
            AtomSymbol::AllergenUnit(derived_units::AllergenUnit),
        ),
        (
            SymbolKey("[Ch]"),
            AtomSymbol::Charriere(derived_units::Charriere),
        ),
        (
            SymbolKey("[EU]"),
            AtomSymbol::EhrlichUnit(derived_units::EhrlichUnit),
        ),
        (
            SymbolKey("[HP]"),
            AtomSymbol::Horsepower(derived_units::Horsepower),
        ),
        (
            SymbolKey("[IR]"),
            AtomSymbol::IndexOfReactivity(derived_units::IndexOfReactivity),
        ),
        (
            SymbolKey("[IU]"),
            AtomSymbol::InternationalUnitIu(derived_units::InternationalUnitIu),
        ),
        (
            SymbolKey("[Lf]"),
            AtomSymbol::LimitOfFlocculation(derived_units::LimitOfFlocculation),
        ),
        (SymbolKey("[gr]"), AtomSymbol::Grain(derived_units::Grain)),
        (
            SymbolKey("[iU]"),
            AtomSymbol::InternationalUnitIU(derived_units::InternationalUnitIU),
        ),
        (
            SymbolKey("[ly]"),
            AtomSymbol::LightYear(derived_units::LightYear),
        ),
        (
            SymbolKey("[pi]"),
            AtomSymbol::TheNumberPi(derived_units::TheNumberPi),
        ),
        (SymbolKey("circ"), AtomSymbol::Circle(derived_units::Circle)),
        (
            SymbolKey("mo_g"),
            AtomSymbol::MeanGregorianMonth(derived_units::MeanGregorianMonth),
        ),
        (
            SymbolKey("mo_j"),
            AtomSymbol::MeanJulianMonth(derived_units::MeanJulianMonth),
        ),
        (
            SymbolKey("mo_s"),
            AtomSymbol::SynodalMonth(derived_units::SynodalMonth),
        ),
        (
            SymbolKey("10*"),
            AtomSymbol::TheNumberTenForArbitraryPowers10star(
                derived_units::TheNumberTenForArbitraryPowers10star,
            ),
        ),
        (
            SymbolKey("10^"),
            AtomSymbol::TheNumberTenForArbitraryPowers10caret(
                derived_units::TheNumberTenForArbitraryPowers10caret,
            ),
        ),
        (
            SymbolKey("Cel"),
            AtomSymbol::DegreeCelsius(derived_units::DegreeCelsius),
        ),
        (SymbolKey("Gal"), AtomSymbol::Gal(derived_units::Gal)),
        (
            SymbolKey("Lmb"),
            AtomSymbol::Lambert(derived_units::Lambert),
        ),
        (SymbolKey("Ohm"), AtomSymbol::Ohm(derived_units::Ohm)),
        (
            SymbolKey("RAD"),
            AtomSymbol::RadiationAbsorbedDose(derived_units::RadiationAbsorbedDose),
        ),
        (
            SymbolKey("REM"),
            AtomSymbol::RadiationEquivalentMan(derived_units::RadiationEquivalentMan),
        ),
        (
            SymbolKey("[G]"),
            AtomSymbol::NewtonianConstantOfGravitation(
                derived_units::NewtonianConstantOfGravitation,
            ),
        ),
        (
            SymbolKey("[S]"),
            AtomSymbol::SvedbergUnit(derived_units::SvedbergUnit),
        ),
        (
            SymbolKey("[c]"),
            AtomSymbol::VelocityOfLight(derived_units::VelocityOfLight),
        ),
        (
            SymbolKey("[e]"),
            AtomSymbol::ElementaryCharge(derived_units::ElementaryCharge),
        ),
        (
            SymbolKey("[g]"),
            AtomSymbol::StandardAccelerationOfFreeFall(
                derived_units::StandardAccelerationOfFreeFall,
            ),
        ),
        (
            SymbolKey("[h]"),
            AtomSymbol::PlanckConstant(derived_units::PlanckConstant),
        ),
        (
            SymbolKey("[k]"),
            AtomSymbol::BoltzmannConstant(derived_units::BoltzmannConstant),
        ),
        (
            SymbolKey("a_g"),
            AtomSymbol::MeanGregorianYear(derived_units::MeanGregorianYear),
        ),
        (
            SymbolKey("a_j"),
            AtomSymbol::MeanJulianYear(derived_units::MeanJulianYear),
        ),
        (
            SymbolKey("a_t"),
            AtomSymbol::TropicalYear(derived_units::TropicalYear),
        ),
        (
            SymbolKey("atm"),
            AtomSymbol::StandardAtmosphere(derived_units::StandardAtmosphere),
        ),
        (
            SymbolKey("att"),
            AtomSymbol::TechnicalAtmosphere(derived_units::TechnicalAtmosphere),
        ),
        (SymbolKey("bar"), AtomSymbol::Bar(derived_units::Bar)),
        (SymbolKey("bit"), AtomSymbol::Bit(derived_units::Bit)),
        (
            SymbolKey("cal"),
            AtomSymbol::Calorie(derived_units::Calorie),
        ),
        (SymbolKey("deg"), AtomSymbol::Degree(derived_units::Degree)),
        (SymbolKey("dyn"), AtomSymbol::Dyne(derived_units::Dyne)),
        (SymbolKey("erg"), AtomSymbol::Erg(derived_units::Erg)),
        (SymbolKey("gon"), AtomSymbol::Gon(derived_units::Gon)),
        (SymbolKey("kat"), AtomSymbol::Katal(derived_units::Katal)),
        (SymbolKey("mho"), AtomSymbol::Mho(derived_units::Mho)),
        (
            SymbolKey("min"),
            AtomSymbol::MinuteMin(derived_units::MinuteMin),
        ),
        (SymbolKey("mol"), AtomSymbol::Mole(derived_units::Mole)),
        (SymbolKey("osm"), AtomSymbol::Osmole(derived_units::Osmole)),
        (SymbolKey("rad"), AtomSymbol::Radian(base_units::Radian)),
        (SymbolKey("sph"), AtomSymbol::Spere(derived_units::Spere)),
        (SymbolKey("tex"), AtomSymbol::Tex(derived_units::Tex)),
        (
            SymbolKey("''"),
            AtomSymbol::SecondAngle(derived_units::SecondAngle),
        ),
        (
            SymbolKey("AU"),
            AtomSymbol::AstronomicUnit(derived_units::AstronomicUnit),
        ),
        (
            SymbolKey("Ao"),
            AtomSymbol::Angstrom(derived_units::Angstrom),
        ),
        (SymbolKey("Bd"), AtomSymbol::Baud(derived_units::Baud)),
        (SymbolKey("Bi"), AtomSymbol::Biot(derived_units::Biot)),
        (
            SymbolKey("Bq"),
            AtomSymbol::Becquerel(derived_units::Becquerel),
        ),
        (SymbolKey("By"), AtomSymbol::Byte(derived_units::Byte)),
        (SymbolKey("Ci"), AtomSymbol::Curie(derived_units::Curie)),
        (SymbolKey("Gb"), AtomSymbol::Gilbert(derived_units::Gilbert)),
        (SymbolKey("Gy"), AtomSymbol::Gray(derived_units::Gray)),
        (SymbolKey("Hz"), AtomSymbol::Hertz(derived_units::Hertz)),
        (SymbolKey("Ky"), AtomSymbol::Kayser(derived_units::Kayser)),
        (SymbolKey("Mx"), AtomSymbol::Maxwell(derived_units::Maxwell)),
        (SymbolKey("Oe"), AtomSymbol::Oersted(derived_units::Oersted)),
        (SymbolKey("Pa"), AtomSymbol::Pascal(derived_units::Pascal)),
        (SymbolKey("St"), AtomSymbol::Stokes(derived_units::Stokes)),
        (SymbolKey("Sv"), AtomSymbol::Sievert(derived_units::Sievert)),
        (SymbolKey("Wb"), AtomSymbol::Weber(derived_units::Weber)),
        (SymbolKey("ar"), AtomSymbol::Are(derived_units::Are)),
        (SymbolKey("cd"), AtomSymbol::Candela(base_units::Candela)),
        (
            SymbolKey("eV"),
            AtomSymbol::Electronvolt(derived_units::Electronvolt),
        ),
        (
            SymbolKey("eq"),
            AtomSymbol::Equivalents(derived_units::Equivalents),
        ),
        (
            SymbolKey("g%"),
            AtomSymbol::GramPercent(derived_units::GramPercent),
        ),
        (
            SymbolKey("gf"),
            AtomSymbol::GramForce(derived_units::GramForce),
        ),
        (SymbolKey("lm"), AtomSymbol::Lumen(derived_units::Lumen)),
        (SymbolKey("lx"), AtomSymbol::Lux(derived_units::Lux)),
        (SymbolKey("mo"), AtomSymbol::Month(derived_units::Month)),
        (SymbolKey("pc"), AtomSymbol::Parsec(derived_units::Parsec)),
        (SymbolKey("ph"), AtomSymbol::Phot(derived_units::Phot)),
        (SymbolKey("sb"), AtomSymbol::Stilb(derived_units::Stilb)),
        (
            SymbolKey("sr"),
            AtomSymbol::Steradian(derived_units::Steradian),
        ),
        (SymbolKey("st"), AtomSymbol::Stere(derived_units::Stere)),
        (SymbolKey("wk"), AtomSymbol::Week(derived_units::Week)),
        (SymbolKey("%"), AtomSymbol::Percent(derived_units::Percent)),
        (
            SymbolKey("'"),
            AtomSymbol::MinuteTick(derived_units::MinuteTick),
        ),
        (SymbolKey("A"), AtomSymbol::Ampere(derived_units::Ampere)),
        (SymbolKey("C"), AtomSymbol::Coulomb(base_units::Coulomb)),
        (SymbolKey("F"), AtomSymbol::Farad(derived_units::Farad)),
        (SymbolKey("G"), AtomSymbol::Gauss(derived_units::Gauss)),
        (SymbolKey("H"), AtomSymbol::Henry(derived_units::Henry)),
        (SymbolKey("J"), AtomSymbol::Joule(derived_units::Joule)),
        (SymbolKey("K"), AtomSymbol::Kelvin(base_units::Kelvin)),
        (
            SymbolKey("L"),
            AtomSymbol::LiterUsL(derived_units::LiterUsL),
        ),
        (SymbolKey("N"), AtomSymbol::Newton(derived_units::Newton)),
        (SymbolKey("P"), AtomSymbol::Poise(derived_units::Poise)),
        (
            SymbolKey("R"),
            AtomSymbol::Roentgen(derived_units::Roentgen),
        ),
        (SymbolKey("S"), AtomSymbol::Siemens(derived_units::Siemens)),
        (SymbolKey("T"), AtomSymbol::Tesla(derived_units::Tesla)),
        (SymbolKey("U"), AtomSymbol::Unit(derived_units::Unit)),
        (SymbolKey("V"), AtomSymbol::Volt(derived_units::Volt)),
        (SymbolKey("W"), AtomSymbol::Watt(derived_units::Watt)),
        (SymbolKey("a"), AtomSymbol::Year(derived_units::Year)),
        (SymbolKey("b"), AtomSymbol::Barn(derived_units::Barn)),
        (SymbolKey("d"), AtomSymbol::Day(derived_units::Day)),
        (SymbolKey("g"), AtomSymbol::Gram(base_units::Gram)),
        (SymbolKey("h"), AtomSymbol::Hour(derived_units::Hour)),
        (SymbolKey("l"), AtomSymbol::LiterL(derived_units::LiterL)),
        (SymbolKey("m"), AtomSymbol::Meter(base_units::Meter)),
        (SymbolKey("s"), AtomSymbol::Second(base_units::Second)),
        (SymbolKey("t"), AtomSymbol::Tonne(derived_units::Tonne)),
        (
            SymbolKey("u"),
            AtomSymbol::UnifiedAtomicMassUnit(derived_units::UnifiedAtomicMassUnit),
        ),
    ],
};
#[cfg(test)]
mod tests {
    use super::UNITS;
    use crate::tokens::{Component, Term};
    #[test]
    fn test_parse_all_the_units() {
        for (key, unit) in UNITS.inner.iter() {
            let main_term = crate::parse(key.0)
                .unwrap_or_else(|e| panic!("Unable to parse '{}': {:?}", key.0, e));
            assert!(!main_term.leading_slash);
            match main_term.term {
                Term::Basic(boxed_component) => match *boxed_component {
                    Component::Annotatable(annotatable) => {
                        assert!(annotatable.simple_unit.factor.is_none());
                        assert_eq!(
                            annotatable.simple_unit.prefix_symbol, None,
                            "Got unexpected prefix when parsing '{}'",
                            key.0
                        );
                        pretty_assertions::assert_eq!(
                            annotatable.simple_unit.atom_symbol,
                            unit,
                            "failed comparing {}: '{:?}' vs '{:?}'",
                            key.0,
                            annotatable.simple_unit.atom_symbol,
                            unit
                        );
                    }
                    _ => panic!("Got wrong Component"),
                },
                Term::Combined(..) => panic!("Got wrong Term"),
            }
        }
    }
}
